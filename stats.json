{"leetcode":{"easy":1,"hard":1,"medium":2,"shas":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal":{"0105-construct-binary-tree-from-preorder-and-inorder-traversal.java":"aa5d791f74481ca665c05dcb89032ca5810830a6","README.md":"75ac83be2e52aa76ea9bd5c9c20537a499cb9ec0","difficulty":"medium"},"README.md":{"":"79a13e739ce4e65d2643fa5e0ef6c4ce297da4e8"},"0110-balanced-binary-tree":{"0110-balanced-binary-tree.java":"6f9c5285fc7a97f4bd10af8ffbdd9b0f8584b99d","README.md":"1496517dcf0faedc819cbdf10d07de1900d95d9c","difficulty":"easy"},"stats.json":{"":"372fabd3a9efc9e4d6b68d305f7a20e3c58cc6a7"},"0098-validate-binary-search-tree":{"0098-validate-binary-search-tree.java":"511b40358ced5e5e98b9ec020af4053c757f0246","README.md":"957fcdbca58c72b7e3fa5e71a94279d6325e4e06","difficulty":"medium"},"1475-maximum-sum-bst-in-binary-tree":{"1475-maximum-sum-bst-in-binary-tree.java":"b7fe9fbc85606b69f41131bfee73be3dbb93c781","README.md":"92e15bf67494b578837ce36406e4e943e04799b5","difficulty":"hard"}},"solved":4}}